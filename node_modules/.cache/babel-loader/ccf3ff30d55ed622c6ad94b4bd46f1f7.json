{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/srixx18/github/klick_mcmaster/src/components/Discussion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CssBaseline, Container, Grid } from \"@material-ui/core\";\nimport PostList from \"./actions/PostList\";\nimport Form from \"./actions/Form\";\nimport Header from \"./actions/Header\";\nimport \"../App.css\";\n\nfunction Discussion(props) {\n  _s();\n\n  const getCurrentDate = () => {\n    const now = new Date();\n    return now.toISOString().slice(0, 10);\n  };\n\n  const [posts, setposts] = useState([{\n    id: uuidv4(),\n    title: \"Cs4hc3 help\",\n    author: \"Jessica\",\n    description: \"Keep having bug in A3.\",\n    date: \"2020-11-11\",\n    topic: \"Study\"\n  }, {\n    id: uuidv4(),\n    title: \"Google Interview\",\n    author: \"Jenny\",\n    description: \"Having interview next week\",\n    date: \"2020-11-10\",\n    topic: \"Work\"\n  }, {\n    id: uuidv4(),\n    title: \"Compsci 3MI3 Question\",\n    author: \"Suri\",\n    description: \"Cannot solve Compsci 3MI3 Assignment 2. Need help!\",\n    date: \"2020-11-12\",\n    topic: \"Study\"\n  }, {\n    id: uuidv4(),\n    title: \"Ski 2020\",\n    author: \"Jackson\",\n    description: \"Anyone going to ski together on Dec 24, 2020?\",\n    date: \"2020-11-11\",\n    topic: \"Social\"\n  }, {\n    id: uuidv4(),\n    title: \"Coffee Break\",\n    author: \"Simon\",\n    description: \"Hosting coffee break this week in JHE\",\n    date: \"2020-11-12\",\n    topic: \"Social\"\n  }, {\n    id: uuidv4(),\n    title: \"Amazon Onsite Next Week\",\n    author: \"Emily\",\n    description: \"What to prepare for the onsite interview next week\",\n    date: \"2020-11-10\",\n    topic: \"Work\"\n  }, {\n    id: uuidv4(),\n    title: \"Cs4hc3 help\",\n    author: \"Jessica\",\n    description: \"Keep having bug in A3.\",\n    date: \"2020-11-11\",\n    topic: \"Study\"\n  }, {\n    id: uuidv4(),\n    title: \"Google Interview\",\n    author: \"Jenny\",\n    description: \"Having interview next week\",\n    date: \"2020-11-10\",\n    topic: \"Work\"\n  }, {\n    id: uuidv4(),\n    title: \"Compsci 3MI3 Question\",\n    author: \"Suri\",\n    description: \"Cannot solve Compsci 3MI3 Assignment 2. Need help!\",\n    date: \"2020-11-12\",\n    topic: \"Study\"\n  }, {\n    id: uuidv4(),\n    title: \"Ski 2020\",\n    author: \"Jackson\",\n    description: \"Anyone going to ski together on Dec 24, 2020?\",\n    date: \"2020-11-11\",\n    topic: \"Social\"\n  }, {\n    id: uuidv4(),\n    title: \"Coffee Break\",\n    author: \"Simon\",\n    description: \"Hosting coffee break this week in JHE\",\n    date: \"2020-11-12\",\n    topic: \"Social\"\n  }, {\n    id: uuidv4(),\n    title: \"Amazon Onsite Next Week\",\n    author: \"Emily\",\n    description: \"What to prepare for the onsite interview next week\",\n    date: \"2020-11-10\",\n    topic: \"Work\"\n  }]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [edit, setEdit] = useState({});\n  useEffect(() => {\n    if (isEdit) {\n      formik.values.title = edit.title;\n      formik.values.author = edit.author;\n      formik.values.date = edit.date;\n      formik.values.topic = edit.topic;\n      formik.values.description = edit.description;\n    } else {\n      formik.values.title = \"\";\n      formik.values.author = \"\";\n      formik.values.date = getCurrentDate();\n      formik.values.topic = \"\";\n      formik.values.description = \"\";\n    }\n  }, [isEdit]);\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      author: \"\",\n      date: getCurrentDate(),\n      topic: \"\",\n      description: \"\"\n    }\n  });\n\n  const handleDiaOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleDiaClose = () => {\n    setIsOpen(false);\n  };\n\n  const handleDelete = id => {\n    setposts(posts.filter(post => post.id !== id));\n  };\n\n  const handleEditClick = post => {\n    setIsOpen(true);\n    setIsEdit(true);\n    setEdit(post);\n  };\n\n  const handleSubmit = e => {\n    const {\n      title,\n      author,\n      date,\n      topic,\n      description\n    } = formik.values;\n\n    if (!isEdit) {\n      setposts([...posts, {\n        id: uuidv4(),\n        title: title,\n        author: author,\n        date: date,\n        topic: topic,\n        description: description\n      }]);\n    } else {\n      const newpost = [...posts];\n      const t = newpost.find(t => t.id === edit.id);\n      t.title = title;\n      t.author = author;\n      t.date = date;\n      t.topic = topic;\n      t.description = description;\n      setIsEdit(false);\n      setEdit({});\n      setposts(newpost);\n    }\n\n    setIsOpen(false);\n    formik.values.title = \"\";\n    formik.values.author = \"\";\n    formik.values.date = getCurrentDate();\n    formik.values.topic = \"\";\n    formik.values.description = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"style\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"chart-style\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          handleFabClick: handleDiaOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostList, {\n          posts: posts,\n          handleDelete: handleDelete,\n          handleEditClick: handleEditClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        open: isOpen,\n        handleClose: handleDiaClose,\n        handleSubmit: handleSubmit,\n        formik: formik,\n        isEdit: isEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Discussion, \"YtoBIy6HBpJJudLWWxsSWxAj05c=\", false, function () {\n  return [useFormik];\n});\n\n_c = Discussion;\nexport default Discussion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Discussion\");","map":{"version":3,"sources":["/Users/srixx18/github/klick_mcmaster/src/components/Discussion.js"],"names":["React","useState","useEffect","useFormik","v4","uuidv4","CssBaseline","Container","Grid","PostList","Form","Header","Discussion","props","getCurrentDate","now","Date","toISOString","slice","posts","setposts","id","title","author","description","date","topic","isOpen","setIsOpen","isEdit","setIsEdit","edit","setEdit","formik","values","initialValues","handleDiaOpen","handleDiaClose","handleDelete","filter","post","handleEditClick","handleSubmit","e","newpost","t","find"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CssBaseline, Container, Grid } from \"@material-ui/core\";\n\nimport PostList from \"./actions/PostList\";\nimport Form from \"./actions/Form\";\nimport Header from \"./actions/Header\";\nimport \"../App.css\";\n\nfunction Discussion(props) {\n  const getCurrentDate = () => {\n    const now = new Date();\n    return now.toISOString().slice(0, 10);\n  };\n\n  const [posts, setposts] = useState([\n    {\n      id: uuidv4(),\n      title: \"Cs4hc3 help\",\n      author: \"Jessica\",\n      description: \"Keep having bug in A3.\",\n      date: \"2020-11-11\",\n      topic: \"Study\",\n    },\n    {\n      id: uuidv4(),\n      title: \"Google Interview\",\n      author: \"Jenny\",\n      description: \"Having interview next week\",\n      date: \"2020-11-10\",\n      topic: \"Work\",\n    },\n    {\n      id: uuidv4(),\n      title: \"Compsci 3MI3 Question\",\n      author: \"Suri\",\n      description: \"Cannot solve Compsci 3MI3 Assignment 2. Need help!\",\n      date: \"2020-11-12\",\n      topic: \"Study\",\n    },\n    {\n      id: uuidv4(),\n      title: \"Ski 2020\",\n      author: \"Jackson\",\n      description: \"Anyone going to ski together on Dec 24, 2020?\",\n      date: \"2020-11-11\",\n      topic: \"Social\",\n    },\n    {\n      id: uuidv4(),\n      title: \"Coffee Break\",\n      author: \"Simon\",\n      description: \"Hosting coffee break this week in JHE\",\n      date: \"2020-11-12\",\n      topic: \"Social\",\n    },\n    {\n      id: uuidv4(),\n      title: \"Amazon Onsite Next Week\",\n      author: \"Emily\",\n      description: \"What to prepare for the onsite interview next week\",\n      date: \"2020-11-10\",\n      topic: \"Work\",\n    },\n    {\n      id: uuidv4(),\n      title: \"Cs4hc3 help\",\n      author: \"Jessica\",\n      description: \"Keep having bug in A3.\",\n      date: \"2020-11-11\",\n      topic: \"Study\",\n    },\n    {\n      id: uuidv4(),\n      title: \"Google Interview\",\n      author: \"Jenny\",\n      description: \"Having interview next week\",\n      date: \"2020-11-10\",\n      topic: \"Work\",\n    },\n    {\n      id: uuidv4(),\n      title: \"Compsci 3MI3 Question\",\n      author: \"Suri\",\n      description: \"Cannot solve Compsci 3MI3 Assignment 2. Need help!\",\n      date: \"2020-11-12\",\n      topic: \"Study\",\n    },\n    {\n      id: uuidv4(),\n      title: \"Ski 2020\",\n      author: \"Jackson\",\n      description: \"Anyone going to ski together on Dec 24, 2020?\",\n      date: \"2020-11-11\",\n      topic: \"Social\",\n    },\n    {\n      id: uuidv4(),\n      title: \"Coffee Break\",\n      author: \"Simon\",\n      description: \"Hosting coffee break this week in JHE\",\n      date: \"2020-11-12\",\n      topic: \"Social\",\n    },\n    {\n      id: uuidv4(),\n      title: \"Amazon Onsite Next Week\",\n      author: \"Emily\",\n      description: \"What to prepare for the onsite interview next week\",\n      date: \"2020-11-10\",\n      topic: \"Work\",\n    },\n  ]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [edit, setEdit] = useState({});\n\n  useEffect(() => {\n    if (isEdit) {\n      formik.values.title = edit.title;\n      formik.values.author = edit.author;\n      formik.values.date = edit.date;\n      formik.values.topic = edit.topic;\n      formik.values.description = edit.description;\n    } else {\n      formik.values.title = \"\";\n      formik.values.author = \"\";\n      formik.values.date = getCurrentDate();\n      formik.values.topic = \"\";\n      formik.values.description = \"\";\n    }\n  }, [isEdit]);\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      author: \"\",\n      date: getCurrentDate(),\n      topic: \"\",\n      description: \"\",\n    },\n  });\n\n  const handleDiaOpen = () => {\n    setIsOpen(true);\n  };\n  const handleDiaClose = () => {\n    setIsOpen(false);\n  };\n\n  const handleDelete = (id) => {\n    setposts(posts.filter((post) => post.id !== id));\n  };\n\n  const handleEditClick = (post) => {\n    setIsOpen(true);\n    setIsEdit(true);\n    setEdit(post);\n  };\n  const handleSubmit = (e) => {\n    const { title, author, date, topic, description } = formik.values;\n    if (!isEdit) {\n      setposts([\n        ...posts,\n        {\n          id: uuidv4(),\n          title: title,\n          author: author,\n          date: date,\n          topic: topic,\n          description: description,\n        },\n      ]);\n    } else {\n      const newpost = [...posts];\n      const t = newpost.find((t) => t.id === edit.id);\n      t.title = title;\n      t.author = author;\n      t.date = date;\n      t.topic = topic;\n      t.description = description;\n      setIsEdit(false);\n      setEdit({});\n      setposts(newpost);\n    }\n    setIsOpen(false);\n    formik.values.title = \"\";\n    formik.values.author = \"\";\n    formik.values.date = getCurrentDate();\n    formik.values.topic = \"\";\n    formik.values.description = \"\";\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Grid className=\"style\">\n        <Container className=\"chart-style\">\n          <Header handleFabClick={handleDiaOpen} />\n          <PostList\n            posts={posts}\n            handleDelete={handleDelete}\n            handleEditClick={handleEditClick}\n          />\n        </Container>\n        <Form\n          open={isOpen}\n          handleClose={handleDiaClose}\n          handleSubmit={handleSubmit}\n          formik={formik}\n          isEdit={isEdit}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Discussion;\n"]},"metadata":{},"sourceType":"module"}